/*
** EPITECH PROJECT, 2022
** corewar.c
** File description:
** corewar
*/

#ifndef _OP_H_
    # define _OP_H_

    ////////////////////////////////////////////////////////////
    /// \brief Memory size
    ////////////////////////////////////////////////////////////
    # define MEM_SIZE                (6*1024)

    ////////////////////////////////////////////////////////////
    /// \brief Size of a line in memory
    ////////////////////////////////////////////////////////////
    # define IDX_MOD                 512

    ////////////////////////////////////////////////////////////
    /// \brief Number of lines in memory
    ////////////////////////////////////////////////////////////
    # define NB_LINE                 12

    ////////////////////////////////////////////////////////////
    /// \brief Number maximum of arguments
    ////////////////////////////////////////////////////////////
    # define MAX_ARGS_NUMBER         4

    ////////////////////////////////////////////////////////////
    /// \brief Char associated to comment
    ////////////////////////////////////////////////////////////
    # define COMMENT_CHAR            '#'

    ////////////////////////////////////////////////////////////
    /// \brief Char associated to label
    ////////////////////////////////////////////////////////////
    # define LABEL_CHAR              ':'

    ////////////////////////////////////////////////////////////
    /// \brief Char associated to direct
    ////////////////////////////////////////////////////////////
    # define DIRECT_CHAR             '%'

    ////////////////////////////////////////////////////////////
    /// \brief Char associated to separator
    ////////////////////////////////////////////////////////////
    # define SEPARATOR_CHAR          44     /* ', ' */

    ////////////////////////////////////////////////////////////
    /// \brief Chars associated to label
    ////////////////////////////////////////////////////////////
    # define LABEL_CHARS             "abcdefghijklmnopqrstuvwxyz_0123456789"

    ////////////////////////////////////////////////////////////
    /// \brief Command associated to name
    ////////////////////////////////////////////////////////////
    # define NAME_CMD_STRING         ".name"

    ////////////////////////////////////////////////////////////
    /// \brief Command associated to comment
    ////////////////////////////////////////////////////////////
    # define COMMENT_CMD_STRING      ".comment"

    ////////////////////////////////////////////////////////////
    /// \brief Number of register
    ////////////////////////////////////////////////////////////
    # define REG_NUMBER      16              /* r1 < - > rx */

    ////////////////////////////////////////////////////////////
    /// \brief Size of indirect value
    ////////////////////////////////////////////////////////////
    # define IND_SIZE        2

    ////////////////////////////////////////////////////////////
    /// \brief Size of direct value
    ////////////////////////////////////////////////////////////
    # define DIR_SIZE        4

    ////////////////////////////////////////////////////////////
    /// \brief Size of register value
    ////////////////////////////////////////////////////////////
    # define REG_SIZE        DIR_SIZE

    ////////////////////////////////////////////////////////////
    /// \brief Size of register in memory
    ////////////////////////////////////////////////////////////
    # define T_REG           1

    ////////////////////////////////////////////////////////////
    /// \brief Size of direct in memory
    ////////////////////////////////////////////////////////////
    # define T_DIR           2

    ////////////////////////////////////////////////////////////
    /// \brief Size of indirect in memory
    ////////////////////////////////////////////////////////////
    # define T_IND           4

    ////////////////////////////////////////////////////////////
    /// \brief Size of label in memory
    ////////////////////////////////////////////////////////////
    # define T_LAB           8

    ////////////////////////////////////////////////////////////
    /// \brief Length of program name
    ////////////////////////////////////////////////////////////
    # define PROG_NAME_LENGTH        128

    ////////////////////////////////////////////////////////////
    /// \brief Length of program comment
    ////////////////////////////////////////////////////////////
    # define COMMENT_LENGTH          2048

    ////////////////////////////////////////////////////////////
    /// \brief Magic number
    ////////////////////////////////////////////////////////////
    # define COREWAR_EXEC_MAGIC      0xea83f3        /* why not */

    ////////////////////////////////////////////////////////////
    /// \brief Number of cycles to die
    ////////////////////////////////////////////////////////////
    # define CYCLE_TO_DIE    1536

    ////////////////////////////////////////////////////////////
    /// \brief Delta number sub to \a CYCLE_TO_DIE
    ////////////////////////////////////////////////////////////
    # define CYCLE_DELTA     5

    ////////////////////////////////////////////////////////////
    /// \brief Number of live
    ////////////////////////////////////////////////////////////
    # define NBR_LIVE        40

    ////////////////////////////////////////////////////////////
    /// \brief Rename char for args
    ////////////////////////////////////////////////////////////
    typedef char args_type_t;

    ////////////////////////////////////////////////////////////
    /// \brief Basic structures
    ////////////////////////////////////////////////////////////
    typedef struct vm_s vm_t;
    typedef struct header_s header_t;
    typedef struct op_s op_t;

    ////////////////////////////////////////////////////////////
    /// \brief Main structure of all function and info
    ////////////////////////////////////////////////////////////
    struct op_s
    {
        char         *mnemonique;
        char         nbr_args;
        args_type_t  attribut[MAX_ARGS_NUMBER];
        char         code;
        int          nbr_cycles;
        char         *comment;
        void         (*func)(vm_t *vm, ...);
    };

    ////////////////////////////////////////////////////////////
    /// \brief Set the op_tab[] acessible from evrywhere
    ////////////////////////////////////////////////////////////
    extern const op_t op_tab[];

    ////////////////////////////////////////////////////////////
    /// \brief Structure where all header information is stored
    ////////////////////////////////////////////////////////////
    struct header_s
    {
        int  magic;
        char prog_name[PROG_NAME_LENGTH + 1];
        int  prog_size;
        char comment[COMMENT_LENGTH + 1];
    };

#endif
